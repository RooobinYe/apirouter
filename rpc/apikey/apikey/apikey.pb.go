// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: apikey.proto

package apikey

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 生成API密钥请求
type GenerateApiKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateApiKeyRequest) Reset() {
	*x = GenerateApiKeyRequest{}
	mi := &file_apikey_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateApiKeyRequest) ProtoMessage() {}

func (x *GenerateApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateApiKeyRequest.ProtoReflect.Descriptor instead.
func (*GenerateApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateApiKeyRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GenerateApiKeyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GenerateApiKeyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GenerateApiKeyRequest) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

// 生成API密钥响应
type GenerateApiKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *ApiKeyInfo            `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateApiKeyResponse) Reset() {
	*x = GenerateApiKeyResponse{}
	mi := &file_apikey_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateApiKeyResponse) ProtoMessage() {}

func (x *GenerateApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateApiKeyResponse.ProtoReflect.Descriptor instead.
func (*GenerateApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateApiKeyResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GenerateApiKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GenerateApiKeyResponse) GetData() *ApiKeyInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// API密钥信息
type ApiKeyInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // UUID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ApiKey        string                 `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // optional
	Description   string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`               // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiKeyInfo) Reset() {
	*x = ApiKeyInfo{}
	mi := &file_apikey_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiKeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeyInfo) ProtoMessage() {}

func (x *ApiKeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeyInfo.ProtoReflect.Descriptor instead.
func (*ApiKeyInfo) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{2}
}

func (x *ApiKeyInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApiKeyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiKeyInfo) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ApiKeyInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ApiKeyInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiKeyInfo) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *ApiKeyInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// 获取API密钥列表请求
type ListApiKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListApiKeysRequest) Reset() {
	*x = ListApiKeysRequest{}
	mi := &file_apikey_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApiKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiKeysRequest) ProtoMessage() {}

func (x *ListApiKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiKeysRequest.ProtoReflect.Descriptor instead.
func (*ListApiKeysRequest) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{3}
}

func (x *ListApiKeysRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListApiKeysRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListApiKeysRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取API密钥列表响应
type ListApiKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *ApiKeyListData        `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListApiKeysResponse) Reset() {
	*x = ListApiKeysResponse{}
	mi := &file_apikey_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApiKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiKeysResponse) ProtoMessage() {}

func (x *ListApiKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiKeysResponse.ProtoReflect.Descriptor instead.
func (*ListApiKeysResponse) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{4}
}

func (x *ListApiKeysResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListApiKeysResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListApiKeysResponse) GetData() *ApiKeyListData {
	if x != nil {
		return x.Data
	}
	return nil
}

// API密钥列表数据
type ApiKeyListData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKeys       []*ApiKeyInfo          `protobuf:"bytes,1,rep,name=api_keys,json=apiKeys,proto3" json:"api_keys,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiKeyListData) Reset() {
	*x = ApiKeyListData{}
	mi := &file_apikey_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiKeyListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeyListData) ProtoMessage() {}

func (x *ApiKeyListData) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeyListData.ProtoReflect.Descriptor instead.
func (*ApiKeyListData) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{5}
}

func (x *ApiKeyListData) GetApiKeys() []*ApiKeyInfo {
	if x != nil {
		return x.ApiKeys
	}
	return nil
}

func (x *ApiKeyListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 获取API密钥详情请求
type GetApiKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 确保用户只能访问自己的API密钥
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApiKeyRequest) Reset() {
	*x = GetApiKeyRequest{}
	mi := &file_apikey_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiKeyRequest) ProtoMessage() {}

func (x *GetApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiKeyRequest.ProtoReflect.Descriptor instead.
func (*GetApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{6}
}

func (x *GetApiKeyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetApiKeyRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取API密钥详情响应
type GetApiKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *ApiKeyInfo            `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApiKeyResponse) Reset() {
	*x = GetApiKeyResponse{}
	mi := &file_apikey_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiKeyResponse) ProtoMessage() {}

func (x *GetApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiKeyResponse.ProtoReflect.Descriptor instead.
func (*GetApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{7}
}

func (x *GetApiKeyResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetApiKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetApiKeyResponse) GetData() *ApiKeyInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 删除API密钥请求
type DeleteApiKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 确保用户只能删除自己的API密钥
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteApiKeyRequest) Reset() {
	*x = DeleteApiKeyRequest{}
	mi := &file_apikey_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiKeyRequest) ProtoMessage() {}

func (x *DeleteApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteApiKeyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteApiKeyRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 删除API密钥响应
type DeleteApiKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *SuccessData           `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteApiKeyResponse) Reset() {
	*x = DeleteApiKeyResponse{}
	mi := &file_apikey_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiKeyResponse) ProtoMessage() {}

func (x *DeleteApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteApiKeyResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteApiKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteApiKeyResponse) GetData() *SuccessData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 成功操作数据
type SuccessData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuccessData) Reset() {
	*x = SuccessData{}
	mi := &file_apikey_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessData) ProtoMessage() {}

func (x *SuccessData) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessData.ProtoReflect.Descriptor instead.
func (*SuccessData) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{10}
}

func (x *SuccessData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 验证API密钥请求（内部服务使用）
type ValidateKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKey        string                 `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateKeyRequest) Reset() {
	*x = ValidateKeyRequest{}
	mi := &file_apikey_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateKeyRequest) ProtoMessage() {}

func (x *ValidateKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateKeyRequest.ProtoReflect.Descriptor instead.
func (*ValidateKeyRequest) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{11}
}

func (x *ValidateKeyRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

// 验证API密钥响应（内部服务使用）
type ValidateKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *KeyValidationData     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateKeyResponse) Reset() {
	*x = ValidateKeyResponse{}
	mi := &file_apikey_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateKeyResponse) ProtoMessage() {}

func (x *ValidateKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateKeyResponse.ProtoReflect.Descriptor instead.
func (*ValidateKeyResponse) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{12}
}

func (x *ValidateKeyResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidateKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidateKeyResponse) GetData() *KeyValidationData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 密钥验证数据
type KeyValidationData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	KeyId         string                 `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Name          string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValidationData) Reset() {
	*x = KeyValidationData{}
	mi := &file_apikey_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValidationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValidationData) ProtoMessage() {}

func (x *KeyValidationData) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValidationData.ProtoReflect.Descriptor instead.
func (*KeyValidationData) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{13}
}

func (x *KeyValidationData) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *KeyValidationData) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *KeyValidationData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *KeyValidationData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *KeyValidationData) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *KeyValidationData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 更新API密钥状态请求（内部使用，如禁用密钥等）
type UpdateKeyStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // active, inactive, expired
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateKeyStatusRequest) Reset() {
	*x = UpdateKeyStatusRequest{}
	mi := &file_apikey_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKeyStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKeyStatusRequest) ProtoMessage() {}

func (x *UpdateKeyStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKeyStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateKeyStatusRequest) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateKeyStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateKeyStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateKeyStatusRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 更新API密钥状态响应
type UpdateKeyStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *SuccessData           `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateKeyStatusResponse) Reset() {
	*x = UpdateKeyStatusResponse{}
	mi := &file_apikey_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKeyStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKeyStatusResponse) ProtoMessage() {}

func (x *UpdateKeyStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikey_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKeyStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateKeyStatusResponse) Descriptor() ([]byte, []int) {
	return file_apikey_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateKeyStatusResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateKeyStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateKeyStatusResponse) GetData() *SuccessData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_apikey_proto protoreflect.FileDescriptor

const file_apikey_proto_rawDesc = "" +
	"\n" +
	"\fapikey.proto\x12\x06apikey\"\x85\x01\n" +
	"\x15GenerateApiKeyRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\x03R\texpiresAt\"n\n" +
	"\x16GenerateApiKeyResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12&\n" +
	"\x04data\x18\x03 \x01(\v2\x12.apikey.ApiKeyInfoR\x04data\"\xc1\x01\n" +
	"\n" +
	"ApiKeyInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x17\n" +
	"\aapi_key\x18\x03 \x01(\tR\x06apiKey\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\x03R\texpiresAt\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\"^\n" +
	"\x12ListApiKeysRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"o\n" +
	"\x13ListApiKeysResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12*\n" +
	"\x04data\x18\x03 \x01(\v2\x16.apikey.ApiKeyListDataR\x04data\"U\n" +
	"\x0eApiKeyListData\x12-\n" +
	"\bapi_keys\x18\x01 \x03(\v2\x12.apikey.ApiKeyInfoR\aapiKeys\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\";\n" +
	"\x10GetApiKeyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"i\n" +
	"\x11GetApiKeyResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12&\n" +
	"\x04data\x18\x03 \x01(\v2\x12.apikey.ApiKeyInfoR\x04data\">\n" +
	"\x13DeleteApiKeyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"m\n" +
	"\x14DeleteApiKeyResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12'\n" +
	"\x04data\x18\x03 \x01(\v2\x13.apikey.SuccessDataR\x04data\"'\n" +
	"\vSuccessData\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"-\n" +
	"\x12ValidateKeyRequest\x12\x17\n" +
	"\aapi_key\x18\x01 \x01(\tR\x06apiKey\"r\n" +
	"\x13ValidateKeyResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12-\n" +
	"\x04data\x18\x03 \x01(\v2\x19.apikey.KeyValidationDataR\x04data\"\xa4\x01\n" +
	"\x11KeyValidationData\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x15\n" +
	"\x06key_id\x18\x02 \x01(\tR\x05keyId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\"Y\n" +
	"\x16UpdateKeyStatusRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\"p\n" +
	"\x17UpdateKeyStatusResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12'\n" +
	"\x04data\x18\x03 \x01(\v2\x13.apikey.SuccessDataR\x04data2\xca\x03\n" +
	"\x06ApiKey\x12O\n" +
	"\x0eGenerateApiKey\x12\x1d.apikey.GenerateApiKeyRequest\x1a\x1e.apikey.GenerateApiKeyResponse\x12F\n" +
	"\vListApiKeys\x12\x1a.apikey.ListApiKeysRequest\x1a\x1b.apikey.ListApiKeysResponse\x12@\n" +
	"\tGetApiKey\x12\x18.apikey.GetApiKeyRequest\x1a\x19.apikey.GetApiKeyResponse\x12I\n" +
	"\fDeleteApiKey\x12\x1b.apikey.DeleteApiKeyRequest\x1a\x1c.apikey.DeleteApiKeyResponse\x12F\n" +
	"\vValidateKey\x12\x1a.apikey.ValidateKeyRequest\x1a\x1b.apikey.ValidateKeyResponse\x12R\n" +
	"\x0fUpdateKeyStatus\x12\x1e.apikey.UpdateKeyStatusRequest\x1a\x1f.apikey.UpdateKeyStatusResponseB\n" +
	"Z\b./apikeyb\x06proto3"

var (
	file_apikey_proto_rawDescOnce sync.Once
	file_apikey_proto_rawDescData []byte
)

func file_apikey_proto_rawDescGZIP() []byte {
	file_apikey_proto_rawDescOnce.Do(func() {
		file_apikey_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apikey_proto_rawDesc), len(file_apikey_proto_rawDesc)))
	})
	return file_apikey_proto_rawDescData
}

var file_apikey_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_apikey_proto_goTypes = []any{
	(*GenerateApiKeyRequest)(nil),   // 0: apikey.GenerateApiKeyRequest
	(*GenerateApiKeyResponse)(nil),  // 1: apikey.GenerateApiKeyResponse
	(*ApiKeyInfo)(nil),              // 2: apikey.ApiKeyInfo
	(*ListApiKeysRequest)(nil),      // 3: apikey.ListApiKeysRequest
	(*ListApiKeysResponse)(nil),     // 4: apikey.ListApiKeysResponse
	(*ApiKeyListData)(nil),          // 5: apikey.ApiKeyListData
	(*GetApiKeyRequest)(nil),        // 6: apikey.GetApiKeyRequest
	(*GetApiKeyResponse)(nil),       // 7: apikey.GetApiKeyResponse
	(*DeleteApiKeyRequest)(nil),     // 8: apikey.DeleteApiKeyRequest
	(*DeleteApiKeyResponse)(nil),    // 9: apikey.DeleteApiKeyResponse
	(*SuccessData)(nil),             // 10: apikey.SuccessData
	(*ValidateKeyRequest)(nil),      // 11: apikey.ValidateKeyRequest
	(*ValidateKeyResponse)(nil),     // 12: apikey.ValidateKeyResponse
	(*KeyValidationData)(nil),       // 13: apikey.KeyValidationData
	(*UpdateKeyStatusRequest)(nil),  // 14: apikey.UpdateKeyStatusRequest
	(*UpdateKeyStatusResponse)(nil), // 15: apikey.UpdateKeyStatusResponse
}
var file_apikey_proto_depIdxs = []int32{
	2,  // 0: apikey.GenerateApiKeyResponse.data:type_name -> apikey.ApiKeyInfo
	5,  // 1: apikey.ListApiKeysResponse.data:type_name -> apikey.ApiKeyListData
	2,  // 2: apikey.ApiKeyListData.api_keys:type_name -> apikey.ApiKeyInfo
	2,  // 3: apikey.GetApiKeyResponse.data:type_name -> apikey.ApiKeyInfo
	10, // 4: apikey.DeleteApiKeyResponse.data:type_name -> apikey.SuccessData
	13, // 5: apikey.ValidateKeyResponse.data:type_name -> apikey.KeyValidationData
	10, // 6: apikey.UpdateKeyStatusResponse.data:type_name -> apikey.SuccessData
	0,  // 7: apikey.ApiKey.GenerateApiKey:input_type -> apikey.GenerateApiKeyRequest
	3,  // 8: apikey.ApiKey.ListApiKeys:input_type -> apikey.ListApiKeysRequest
	6,  // 9: apikey.ApiKey.GetApiKey:input_type -> apikey.GetApiKeyRequest
	8,  // 10: apikey.ApiKey.DeleteApiKey:input_type -> apikey.DeleteApiKeyRequest
	11, // 11: apikey.ApiKey.ValidateKey:input_type -> apikey.ValidateKeyRequest
	14, // 12: apikey.ApiKey.UpdateKeyStatus:input_type -> apikey.UpdateKeyStatusRequest
	1,  // 13: apikey.ApiKey.GenerateApiKey:output_type -> apikey.GenerateApiKeyResponse
	4,  // 14: apikey.ApiKey.ListApiKeys:output_type -> apikey.ListApiKeysResponse
	7,  // 15: apikey.ApiKey.GetApiKey:output_type -> apikey.GetApiKeyResponse
	9,  // 16: apikey.ApiKey.DeleteApiKey:output_type -> apikey.DeleteApiKeyResponse
	12, // 17: apikey.ApiKey.ValidateKey:output_type -> apikey.ValidateKeyResponse
	15, // 18: apikey.ApiKey.UpdateKeyStatus:output_type -> apikey.UpdateKeyStatusResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_apikey_proto_init() }
func file_apikey_proto_init() {
	if File_apikey_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apikey_proto_rawDesc), len(file_apikey_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apikey_proto_goTypes,
		DependencyIndexes: file_apikey_proto_depIdxs,
		MessageInfos:      file_apikey_proto_msgTypes,
	}.Build()
	File_apikey_proto = out.File
	file_apikey_proto_goTypes = nil
	file_apikey_proto_depIdxs = nil
}
