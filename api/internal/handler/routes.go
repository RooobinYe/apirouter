// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"

	"apirouter/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 用户登录
				Method:  http.MethodPost,
				Path:    "/auth/login",
				Handler: LoginHandler(serverCtx),
			},
			{
				// 用户注册
				Method:  http.MethodPost,
				Path:    "/auth/register",
				Handler: RegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					// 生成单个API密钥
					Method:  http.MethodPost,
					Path:    "/apikeys",
					Handler: GenerateApiKeyHandler(serverCtx),
				},
				{
					// 获取API密钥列表
					Method:  http.MethodGet,
					Path:    "/apikeys",
					Handler: ListApiKeysHandler(serverCtx),
				},
				{
					// 获取API密钥详情
					Method:  http.MethodGet,
					Path:    "/apikeys/:id",
					Handler: GetApiKeyHandler(serverCtx),
				},
				{
					// 删除API密钥
					Method:  http.MethodDelete,
					Path:    "/apikeys/:id",
					Handler: DeleteApiKeyHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.ApiKeyMiddleware},
			[]rest.Route{
				{
					// OpenAI Chat 聊天接口
					Method:  http.MethodPost,
					Path:    "/chat/completions",
					Handler: OpenAIChatHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/openai"),
	)
}
